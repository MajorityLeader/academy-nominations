generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model AcademyNominations {
  id                                String                                   @id @default("") @db.VarChar(11)
  email                             String                                   @unique(map: "EmailUnique") @default("") @db.VarChar(255)
  firstName                         String?                                  @default("") @db.VarChar(50)
  middleName                        String?                                  @db.VarChar(50)
  lastName                          String?                                  @default("") @db.VarChar(50)
  birthday                          DateTime?                                @db.Date
  birthPlace                        String?                                  @default("") @db.VarChar(255)
  fatherName                        String?                                  @db.VarChar(100)
  fatherOccupation                  String?                                  @db.VarChar(255)
  motherName                        String?                                  @db.VarChar(100)
  motherOccupation                  String?                                  @db.VarChar(255)
  addressStreet                     String?                                  @default("") @db.VarChar(255)
  addressCity                       String?                                  @default("") @db.VarChar(255)
  addressState                      String?                                  @default("") @db.VarChar(2)
  addressZip                        String?                                  @default("") @db.VarChar(5)
  addressPhone                      String?                                  @default("") @db.VarChar(50)
  tempStreet                        String?                                  @db.VarChar(255)
  tempCity                          String?                                  @db.VarChar(255)
  tempState                         String?                                  @db.VarChar(2)
  tempZip                           String?                                  @db.VarChar(5)
  tempPhone                         String?                                  @db.VarChar(50)
  tempValidUntil                    String?                                  @db.VarChar(255)
  highSchool                        String?                                  @default("") @db.VarChar(255)
  yearOfGraduation                  Int?
  college                           String?                                  @db.VarChar(255)
  yearsCompleted                    Int?
  extraActivitiesDescription        String?                                  @db.Text
  athleticDescription               String?                                  @db.Text
  employedWhere                     String?                                  @db.VarChar(255)
  employedHoursAfterSchool          Int?
  employedHoursDuringSummer         Int?
  academySelectFirst                AcademyNominations_academySelectFirst
  academySelectSecond               AcademyNominations_academySelectSecond?
  academySelectThird                AcademyNominations_academySelectThird?
  academySelectFourth               AcademyNominations_academySelectFourth?
  academySelectionElsewhere         String?                                  @default("") @db.VarChar(255)
  academySelectionPreviousElsewhere String?                                  @db.VarChar(255)
  academySelectionPreviouslyWhen    String?                                  @db.VarChar(50)
  permissionMedia                   Boolean?
  recommendationOption              AcademyNominations_recommendationOption?
  createdAt                         DateTime                                 @default(now()) @db.DateTime(0)
  updatedAt                         DateTime                                 @default(now()) @db.DateTime(0)
  submittedAt                       DateTime?                                @db.DateTime(0)
}

model Applications {
  id         Int          @id @default(autoincrement()) @db.UnsignedInt
  uac        String       @default("") @db.VarChar(13)
  References References[]
}

model Recommendations {
  id Int @id @default(autoincrement()) @db.UnsignedInt
}

model References {
  id             Int          @id @default(autoincrement()) @db.UnsignedInt
  application    Int          @db.UnsignedInt
  onefirstName   String       @default("") @db.VarChar(255)
  oneLastName    String       @default("") @db.VarChar(255)
  oneEmail       String       @default("") @db.VarChar(255)
  twoFirstName   String       @default("") @db.VarChar(255)
  twoLastName    String       @default("") @db.VarChar(255)
  twoEmail       String       @default("") @db.VarChar(255)
  threeFirstName String       @default("") @db.VarChar(255)
  threeLastName  String       @default("") @db.VarChar(255)
  threeEmail     String       @default("") @db.VarChar(255)
  Applications   Applications @relation(fields: [application], references: [id], onUpdate: Restrict, map: "References_ibfk_1")

  @@index([application], map: "application")
}

enum AcademyNominations_academySelectFirst {
  AIR_FORCE       @map("AIR FORCE")
  MILITARY
  MERCHANT_MARINE @map("MERCHANT MARINE")
  NAVAL
  NULL
}

enum AcademyNominations_academySelectSecond {
  AIR_FORCE       @map("AIR FORCE")
  MILITARY
  MERCHANT_MARINE @map("MERCHANT MARINE")
  NAVAL
}

enum AcademyNominations_academySelectThird {
  AIR_FORCE       @map("AIR FORCE")
  MILITARY
  MERCHANT_MARINE @map("MERCHANT MARINE")
  NAVAL
}

enum AcademyNominations_academySelectFourth {
  AIR_FORCE       @map("AIR FORCE")
  MILITARY
  MERCHANT_MARINE @map("MERCHANT MARINE")
  NAVAL
}

enum AcademyNominations_recommendationOption {
  ATTACHED
  NEEDED
  NULL
}
